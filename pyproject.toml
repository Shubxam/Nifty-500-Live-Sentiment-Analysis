# ---- Project Info and Dependencies ----

[project.urls]
Repository = "https://github.com/shubxam/Nifty-500-Live-Sentiment-Analysis"
# Homepage = "https://..."
# Documentation = "https://..."

[project]
name = "Nifty-500-Live-Sentiment-Analysis"
description = "real time sentiment analysis of nifty indices"
authors = [
    { name="Shubham Soni", email="shubxam@gmail.com" },
]
readme = "README.md"
license = "MIT"
version = "0.1.0"
requires-python = ">=3.11,<4.0"

# ---- Main dependencies ----

dependencies = [
    "beautifulsoup4>=4.13.3",
    "curl-cffi>=0.11.4",
    "dotenv>=0.9.9",
    "duckdb>=1.2.1",
    "google-genai>=1.21.1",
    "httpx>=0.28.1",
    "loguru>=0.7.3",
    "lxml>=5.3.1",
    "matplotlib>=3.10.1",
    "nse>=1.1.0",
    "pandas>=2.2.3",
    "plotly>=6.0.1",
    "pytz>=2025.2",
    "torch>=2.6.0",
    "tqdm>=4.67.1",
    "transformers>=4.51.3",
    "whenever>=0.7.3",
]


# ---- Dev dependencies ----

[dependency-groups]
dev = [
    "pytest>=8.3.5",
    "pytest-sugar>=1.0.0",
    "ruff>=0.11.9",
    "codespell>=2.4.1",
    "rich>=13.9.4",
    "funlog>=0.2.1",
    "ipykernel>=6.29.5",
    "ty>=0.0.1a11",
    "pre-commit>=4.2.0",
    "bandit>=1.8.5",
]

# ---- Settings ----

[[tool.uv.index]]
name = "pytorch-cpu"
url = "https://download.pytorch.org/whl/cpu"
explicit = true

[tool.uv.sources]
torch = [
  { index = "pytorch-cpu" },
]

[tool.ruff]
line-length = 88
indent-width = 4
extend-exclude = ["*.ipynb"]

[tool.ruff.lint]
# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

select = [
    # See: https://docs.astral.sh/ruff/rules/
    # Basic list from: https://docs.astral.sh/ruff/linter/#rule-selection
    "E", # https://docs.astral.sh/ruff/rules/#error-e
    "F", # https://docs.astral.sh/ruff/rules/#pyflakes-f
    "UP", # https://docs.astral.sh/ruff/rules/#pyupgrade-up
    "B", # https://docs.astral.sh/ruff/rules/#flake8-bugbear-b
    "I", # https://docs.astral.sh/ruff/rules/#isort-i
    # Other possibilities:
    # "D" # https://docs.astral.sh/ruff/rules/#pydocstyle-d
    # "Q" # https://docs.astral.sh/ruff/rules/#flake8-quotes-q
    # "COM" # https://docs.astral.sh/ruff/rules/#flake8-commas-com
    # "SIM", # https://docs.astral.sh/ruff/rules/#flake8-simplify-sim
]
ignore = [
    # Disable some rules that are overly pedantic. Add/remove as desired:
    "E501", # https://docs.astral.sh/ruff/rules/line-too-long/
    "E402", # https://docs.astral.sh/ruff/rules/module-import-not-at-top-of-file/
    "E731", # https://docs.astral.sh/ruff/rules/lambda-assignment/
    # We use both ruff formatter and linter so some rules should always be disabled.
    # See: https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules
    "W191", # https://docs.astral.sh/ruff/rules/tab-indentation/
    "E111", # https://docs.astral.sh/ruff/rules/indentation-with-invalid-multiple/
    "E114", # https://docs.astral.sh/ruff/rules/indentation-with-invalid-multiple-comment/
    "E117", # https://docs.astral.sh/ruff/rules/over-indented/
    "D206", # https://docs.astral.sh/ruff/rules/docstring-tab-indentation/
    "D300", # https://docs.astral.sh/ruff/rules/triple-single-quotes/
    "Q000", # https://docs.astral.sh/ruff/rules/bad-quotes-inline-string/
    "Q001", # https://docs.astral.sh/ruff/rules/bad-quotes-multiline-string/
    "Q002", # https://docs.astral.sh/ruff/rules/bad-quotes-docstring/
    "Q003", # https://docs.astral.sh/ruff/rules/avoidable-escaped-quote/
    "COM812", # https://docs.astral.sh/ruff/rules/missing-trailing-comma/
    "COM819", # https://docs.astral.sh/ruff/rules/prohibited-trailing-comma/
    "ISC002", # https://docs.astral.sh/ruff/rules/multi-line-implicit-string-concatenation/
]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "single"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.codespell]
ignore-words-list = "IST,ist"
skip = "*.ipynb,*.csv,NIFTY_500_live_sentiment.html,*.yml"
# write-changes = true

[tool.pytest.ini_options]
python_files = ["*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
testpaths = [
    "src",
    "tests",
]

[tool.bandit]
# See: https://bandit.readthedocs.io/en/latest/config.html
# use `# nosec issue-code` to ignore specific issues in code
# Specify the directories to scan for security issues
targets = [
    "src",
    "tests",
    "devtools",
]

skips = ["B101", "B601"]

[tool.bandit.assert_used]
skips = ['*_test.py', 'test_*.py']

[tool.ty.src]
exclude = ["*.ipynb"]
